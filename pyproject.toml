[build-system]
requires = ["setuptools", "wheel", "sphinx", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "RVdata"
dynamic = ["version"]
description = "EPRV Data Standardization Project"
authors = [
    { name="BJ Fulton", email="bjfulton@ipac.caltech.edu" }
]
readme = "README.md"
requires-python = ">=3.12"

dependencies = [
    "astropy",
    "numpy",
    "pandas",
    "GitPython",
    "specutils",
    "astroquery"
]

# Optional dependencies
[project.optional-dependencies]
dev = [
    "black",       # Code formatting
    "flake8",      # Code linting
    "pytest",      # Testing
    "tox",         # Testing
    "pytest-benchmark", # Benchmarking
    "coverage",    # Code coverage
    "sphinx",            # Documentation
    "sphinx-rtd-theme",  # ReadTheDocs theme for Sphinx
    "sphinxcontrib-napoleon",
    "sphinx-autodoc-typehints",
]

[tool.black]
line-length = 88
target-version = ["py313"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["W503", "E501"]

[tool.sphinx]
source-dir = "docs/source"
build-dir = "docs/_build"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages]
find = {}

[tool.setuptools_scm]
version_file = "rvdata/version.py"

[tool.poe.tasks]
# Task automation using poe the poet (Optional)
docs = "sphinx-build -b html docs/source docs/_build/html"
test = "pytest"

[tool.pytest.ini_options]
minversion = 7.0
testpaths = [
    "rvdata",
]
addopts = [
    "--color=yes",
]

[tool.coverage]

    [tool.coverage.run]
        omit = [
            "rvdata/core/models/config/*",
            "rvdata/tests/*",
            "rvdata/version.py",
        ]

    [tool.coverage.report]
        exclude_lines = [
            # Have to re-enable the standard pragma
            "pragma: no cover",
            # Don't complain about packages we have installed
            "except ImportError",
            # Don't complain if tests don't hit defensive assertion code:
            "raise AssertionError",
            "raise NotImplementedError",
            # Don't complain about script hooks
            "'def main(.*):'",
            # Ignore branches that don't pertain to this version of Python
            "pragma: py{ignore_python_version}",
            # Don't complain about IPython completion helper
            "def _ipython_key_completions_",
        ]